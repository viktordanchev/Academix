@model IEnumerable<StudentViewModel>

@{
    ViewData["Title"] = "Students";
}

<h1 class="display-1 fw-bold ">Students</h1>

<div class="container-fluid bg-transparent my-4 p-3">
    <form method="get" asp-controller="Student" asp-action="Index" class="form-inline d-flex justify-content-center mb-3">
        <div class="d-flex flex-row w-25 w-sm-100">
            <input class="form-control mr-sm-2" type="search" placeholder="Search student.." aria-label="Search" name="searchQuery">
            <button class="btn btn-primary btn-la my-2 my-sm-0" type="submit">Search</button>
        </div>
    </form>
    <div class="row row-cols-1 row-cols-xs-2 row-cols-sm-2 row-cols-lg-6 g-3 text-center d-flex flex-wrap justify-content-center">
        @foreach (var student in Model)
        {
            <div class="col">
                <div class="rounded-10 bg-auth card h-100 shadow-sm">
                    <div class="card-body align-content-center">
                        <div class="clearfix">
                            <div>
                                <div class="d-block text-white fs-5 fw-normal">Student</div>
                                <span class="text-white fs-5 fw-bold ms-lg-3">@student.Name - @student.Class</span>
                            </div>
                            <hr class="bg-white mx-4 my-3" />
                            <div class="d-flex flex-column mb-3">
                                <div class="d-block text-white fs-3 fw-normal">Absences</div>
                                <div class="d-flex flex-row justify-content-around mb-2">
                                    <div class="d-inline">
                                        <div class="d-inline text-white fs-5 fw-normal">Excused:</div>
                                        @if (student.Absences.Where(a => a.IsExcused).Count() > 0)
                                        {
                                            <span class="px-2 rounded-10 bg-success text-white fs-5 fw-bold">
                                                @student.Absences.Where(a => a.IsExcused).Count()
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="fs-5 fw-bold ms-lg-2">0</span>
                                        }
                                    </div>
                                    <div class="d-inline">
                                        <div class="d-inline text-white fs-5 fw-normal">Not Excused:</div>
                                        @if (student.Absences.Where(a => !a.IsExcused).Count() > 0)
                                        {
                                            <span class="px-2 rounded-10 bg-danger text-white fs-5 fw-bold">
                                                @student.Absences.Where(a => !a.IsExcused).Count()
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="fs-5 fw-bold ms-lg-2">0</span>
                                        }
                                    </div>
                                </div>
                                <div class="d-flex flex-row justify-content-between gap-3">
                                    <a asp-controller="Student" asp-action="AddAbsence" asp-route-id="@student.Id" class="btn btn-primary w-50">Add</a>
                                    <a asp-controller="Student" asp-action="AllAbsences" asp-route-studentId="@student.Id" class="btn btn-primary w-50">All</a>
                                </div>
                            </div>
                            <div class="d-flex flex-column">
                                <div class="d-block text-white fs-3 fw-normal">Grades</div>
                                <div class="d-block">
                                    <div class="d-inline text-white fs-5 fw-normal">Average Grade:</div>
                                    <span class="text-white fs-5 fw-bold ms-lg-1">
                                        @if (student.Grades.Count() > 0)
                                        {
                                            @student.Grades.Average(g => g.GradeNumber).ToString("#.##")
                                        }
                                        else
                                        {
                                            <span>0</span>
                                        }
                                    </span>
                                </div>
                                <div class="d-flex flex-wrap justify-content-center gap-2 mb-2">
                                    <partial name="_GradesPartial" model="@student.Grades" />
                                </div>
                                <div class="d-flex flex-row justify-content-between gap-3">
                                    <a asp-controller="Student" asp-action="AddGrade" asp-route-id="@student.Id" class="btn btn-primary w-50">Add</a>
                                    <a asp-controller="Student" asp-action="AllGrades" asp-route-studentId="@student.Id" class="btn btn-primary w-50">All</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/areas/popover.js"></script>
}